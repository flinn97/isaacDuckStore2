{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Owner\\\\Desktop\\\\DuckWH\\\\client\\\\src\\\\pages\\\\ducksList.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport axios from 'axios';\nimport Duck from '../components/Duck.js';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction DucksList() {\n  _s();\n  const [ducks, setDucks] = useState([]);\n  const [selectedDuck, setSelectedDuck] = useState(null);\n  const [formData, setFormData] = useState({\n    color: 'Red',\n    // default\n    size: 'Small',\n    // default\n    price: 0,\n    quantity: 0\n  });\n\n  // Fetch ducks on component mount\n  useEffect(() => {\n    fetchDucks();\n  }, []);\n  const fetchDucks = () => {\n    axios.get('http://localhost:3001/api/ducks').then(res => setDucks(res.data)).catch(err => console.error(err));\n  };\n\n  // Form input handler\n  const handleChange = e => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  // Submit form - create new or update existing\n  const handleSubmit = e => {\n    e.preventDefault();\n\n    // Edit\n    if (selectedDuck) {\n      axios.put(`http://localhost:3001/api/ducks/${selectedDuck._id}`, {\n        price: formData.price,\n        quantity: formData.quantity\n      }).then(() => {\n        setSelectedDuck(null);\n        resetForm();\n        fetchDucks();\n      }).catch(err => console.error(err));\n    }\n\n    // Add\n    else {\n      axios.post('http://localhost:3001/api/ducks', formData).then(() => {\n        resetForm();\n        fetchDucks();\n      }).catch(err => console.error(err));\n    }\n  };\n\n  // Pre-fill form for editing\n  const handleEdit = duck => {\n    setSelectedDuck(duck);\n    setFormData({\n      color: duck.color,\n      size: duck.size,\n      price: duck.price,\n      quantity: duck.quantity\n    });\n  };\n\n  // Logical delete (confirm first)\n  const handleDelete = id => {\n    if (window.confirm('Are you sure you want to delete this duck?')) {\n      axios.delete(`http://localhost:3001/api/ducks/${id}`).then(() => fetchDucks()).catch(err => console.error(err));\n    }\n  };\n\n  // Reset form fields\n  const resetForm = () => {\n    setFormData({\n      color: 'Red',\n      size: 'Small',\n      price: 0,\n      quantity: 0\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"table\", {\n    className: \"table\",\n    children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n      className: \"header-row\",\n      children: /*#__PURE__*/_jsxDEV(\"tr\", {\n        className: \"table-row\",\n        children: [/*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Id\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Color\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Size\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Price\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n          children: \"Quantity\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n      children: ducks.map(duck => /*#__PURE__*/_jsxDEV(Duck, {\n        duck: duck\n      }, duck._id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 5\n  }, this);\n}\n_s(DucksList, \"Q4Ypz2OlkfoLPlBKKwlDQA1v8nQ=\");\n_c = DucksList;\n;\nexport default DucksList;\nvar _c;\n$RefreshReg$(_c, \"DucksList\");","map":{"version":3,"names":["React","useEffect","useState","axios","Duck","jsxDEV","_jsxDEV","DucksList","_s","ducks","setDucks","selectedDuck","setSelectedDuck","formData","setFormData","color","size","price","quantity","fetchDucks","get","then","res","data","catch","err","console","error","handleChange","e","target","name","value","handleSubmit","preventDefault","put","_id","resetForm","post","handleEdit","duck","handleDelete","id","window","confirm","delete","className","children","fileName","_jsxFileName","lineNumber","columnNumber","map","_c","$RefreshReg$"],"sources":["C:/Users/Owner/Desktop/DuckWH/client/src/pages/ducksList.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport axios from 'axios';\r\nimport Duck from '../components/Duck.js';\r\n\r\nfunction DucksList() {\r\n    const [ducks, setDucks] = useState([]);\r\n    const [selectedDuck, setSelectedDuck] = useState(null); \r\n    const [formData, setFormData] = useState({\r\n      color: 'Red',    // default\r\n      size: 'Small',   // default\r\n      price: 0,\r\n      quantity: 0\r\n    });\r\n  \r\n    // Fetch ducks on component mount\r\n    useEffect(() => {\r\n      fetchDucks();\r\n    }, []);\r\n  \r\n    const fetchDucks = () => {\r\n      axios.get('http://localhost:3001/api/ducks')\r\n        .then(res => setDucks(res.data))\r\n        .catch(err => console.error(err));\r\n    };\r\n  \r\n    // Form input handler\r\n    const handleChange = (e) => {\r\n      setFormData({ ...formData, [e.target.name]: e.target.value });\r\n    };\r\n  \r\n    // Submit form - create new or update existing\r\n    const handleSubmit = (e) => {\r\n      e.preventDefault();\r\n  \r\n      // Edit\r\n      if (selectedDuck) {\r\n        axios.put(`http://localhost:3001/api/ducks/${selectedDuck._id}`, {\r\n          price:    formData.price,\r\n          quantity: formData.quantity\r\n        })\r\n        .then(() => {\r\n          setSelectedDuck(null);\r\n          resetForm();\r\n          fetchDucks();\r\n        })\r\n        .catch(err => console.error(err));\r\n      } \r\n\r\n      \r\n      // Add\r\n      else {\r\n        axios.post('http://localhost:3001/api/ducks', formData)\r\n          .then(() => {\r\n            resetForm();\r\n            fetchDucks();\r\n          })\r\n          .catch(err => console.error(err));\r\n      }\r\n    };\r\n  \r\n    // Pre-fill form for editing\r\n    const handleEdit = (duck) => {\r\n      setSelectedDuck(duck);\r\n      setFormData({\r\n        color:    duck.color,\r\n        size:     duck.size,\r\n        price:    duck.price,\r\n        quantity: duck.quantity\r\n      });\r\n    };\r\n  \r\n    // Logical delete (confirm first)\r\n    const handleDelete = (id) => {\r\n      if (window.confirm('Are you sure you want to delete this duck?')) {\r\n        axios.delete(`http://localhost:3001/api/ducks/${id}`)\r\n          .then(() => fetchDucks())\r\n          .catch(err => console.error(err));\r\n      }\r\n    };\r\n  \r\n    // Reset form fields\r\n    const resetForm = () => {\r\n      setFormData({ color: 'Red', size: 'Small', price: 0, quantity: 0 });\r\n    };\r\n\r\n  return (\r\n    <table className='table'>\r\n      <thead className='header-row'>\r\n        <tr className='table-row'>\r\n          <th>Id</th>\r\n          <th>Color</th>\r\n          <th>Size</th>\r\n          <th>Price</th>\r\n          <th>Quantity</th>\r\n        </tr>\r\n      </thead>\r\n      <tbody>\r\n        {ducks.map(duck => <Duck key={duck._id} duck={duck} />)}\r\n      </tbody>\r\n    </table>\r\n  );\r\n};\r\n\r\nexport default DucksList;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}